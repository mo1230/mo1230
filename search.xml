<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android开发之RecyclerView创建列表</title>
      <link href="/2020/03/02/Android%E5%BC%80%E5%8F%91%E4%B9%8BRecyclerView%E5%88%9B%E5%BB%BA%E5%88%97%E8%A1%A8/"/>
      <url>/2020/03/02/Android%E5%BC%80%E5%8F%91%E4%B9%8BRecyclerView%E5%88%9B%E5%BB%BA%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>RecyclerView控件可以用于创建各种类型的列表，比如横向的、竖向的、还有网格的。<br>RecyclerView的具体类型通过设定其布局管理器来决定</p><blockquote><p>LinearLayoutManager 现行管理器，支持横向、纵向。<br>GridLayoutManager 网格布局管理器<br>StaggeredGridLayoutManager 瀑布就式布局管理器</p></blockquote><p>下面讲讲它的用法。<br>这个控件可以创建列表，所以你需要自己建一个列表中每一项的布局文件，告诉它列表的每一项长什么样子；然后列表肯定需要往那个项布局文件存数据，所以需要一个数据源，比如一个 List<Intager> list ，list中是对应列表各项的数据；最后需要一个适配器，这个适配器用来将数据源和项布局对应关联起来，告诉RecyclerView数据应该怎么放。</p><blockquote><p>ReyclerView需要：<br>1 数据源    要放在列表中的所有数据<br>2 适配器    将数据传入适配器，把数据与项布局对应绑定，所以在适配器类内部需要使用数据源以及项布局</p></blockquote><h2 id="创建项布局文件"><a href="#创建项布局文件" class="headerlink" title="创建项布局文件"></a>创建项布局文件</h2><p>我要往列表中放图片，所以项布局中要有一个ImageView<br>你的根据需要进行布局</p><p><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;    android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt;&lt;ImageView    android:id=&quot;@+id/images&quot;    android:layout_width=&quot;match_parent&quot;    android:layout_height=&quot;match_parent&quot;    /&gt;&lt;/FrameLayout&gt;</code></p><h2 id="创建数据源"><a href="#创建数据源" class="headerlink" title="创建数据源"></a>创建数据源</h2><p>因为我要往列表中放图片，所以我的数据源存放的是图片的id所以是Integer类型，你根据自己的需要进行填写</p><p><code>// 数据源    private List&lt;Integer&gt; imagePath;</code></p><h2 id="创建适配器"><a href="#创建适配器" class="headerlink" title="创建适配器"></a>创建适配器</h2><p>下面是我自己定义的一个适配器类，RecyclerView的适配器需要继承于RecyclerView.Adapter&lt;&gt;类，这是个模板类，其尖括号里需要是一个ViewHolder，这个ViewHolder在适配器类内定义，ViewHolder内的属性对于项布局中的各个控件。</p><blockquote><p>讲一下怎么在IDE中更便捷的创建适配器类，不要直接复制粘贴下面的内容，先创建自己的适配器，然后用ide把需要override的方法弄出来，在弄那个ViewHolder，然后再对照下面的内容将自己的适配器弄完整—————-因为这个确实有些复杂，所以要用的时候先把这个类的框架弄好，再对照着下面改吧。</p></blockquote><p>`     class DataAdapter extends RecyclerView.Adapter&lt;DataAdapter.ViewHolders&gt;{<br>        // 下面这个类用于承接列表的项布局中的控件<br>        public class ViewHolders extends RecyclerView.ViewHolder{<br>            private ImageView imageView;                    // 因为我的项布局中只放了一个ImageView，所以这里只有这个，<br>                                                            // 如果你的项布局中有其他的，要在这里写出来作为ViewHold的属性<br>            public ViewHolders(@NonNull View itemView) {<br>                super(itemView);<br>                this.imageView = itemView.findViewById(R.id.images);<br>            }<br>        }</p><pre><code>    // 适配器属性    private List&lt;Integer&gt; paths;        // 数据源    private ViewHolders viewHolders;    // 项布局中的每个控件    // 将数据传进来    public DataAdapter(List&lt;Integer&gt; dataList) {        this.paths = dataList;    }</code></pre><p>// 下面这个方法将项布局与ViewHolder关联起来<br>        @NonNull<br>        @Override<br>        public ViewHolders onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {<br>            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.items, null);<br>            this.viewHolders = new ViewHolders(view);<br>            return this.viewHolders;<br>        }</p><p>// 下面这个方法设置项布局中的控件的数据<br>        @Override<br>        public void onBindViewHolder(@NonNull ViewHolders holder, int position) {<br>            this.viewHolders.imageView.setImageResource(this.paths.get(position));<br>        }</p><pre><code>    @Override    public int getItemCount() {        return this.paths.size();    }}`</code></pre><h2 id="给数据源添加具体数据、设置RecyclerView的具体类型、给RecyclerView设置适配器"><a href="#给数据源添加具体数据、设置RecyclerView的具体类型、给RecyclerView设置适配器" class="headerlink" title="给数据源添加具体数据、设置RecyclerView的具体类型、给RecyclerView设置适配器"></a>给数据源添加具体数据、设置RecyclerView的具体类型、给RecyclerView设置适配器</h2><p>`<br>        this.recyclerView = this.view.findViewById(R.id.list);      // RecyclerView<br>        this.imagePath = new ArrayList&lt;&gt;();                         // 实例化数据源<br>        this.imagePath.add(R.drawable.me);<br>        this.imagePath.add(R.drawable.avatar);                      // 给数据源添加具体数据<br>        this.dataAdapter = new DataAdapter(this.imagePath);         // 实例化适配器，将数据源传进去</p><pre><code>    LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());        // 线性布局管理器，默认纵向    this.recyclerView.setLayoutManager(linearLayoutManager);                                // 设置RecyclerView的类型    this.recyclerView.setAdapter(this.dataAdapter);                                         // 设置适配器</code></pre><p>`</p><h2 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h2><p>ok了</p>]]></content>
      
      
      <categories>
          
          <category> 移动端开发&gt;Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RecylerView </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随心之言</title>
      <link href="/2020/02/29/%E9%9A%8F%E5%BF%83%E4%B9%8B%E8%A8%80/"/>
      <url>/2020/02/29/%E9%9A%8F%E5%BF%83%E4%B9%8B%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>如今的我算是一个落魄之人，本科的专业不是自己喜欢的，大学四年兜兜转转自己学了一些编程的一些东西，但是如今恐怕也尚未摸到合格线。现在刚刚毕业，还没有找工作，参加了考研大军，考软件工程。<br>初试成绩308分，不算高，自己作为一个跨专业的考生心里总归是有些许恐慌。如今发生了疫情，所有人都被困在家，对我而言算得上是一件幸事，多给了我一些时间去学习。不论是考研复试，还是参加工作，都多了一些时间。<br>对于计算机软件技术，我原本心里挺抗拒Java，觉得太普遍。因其尚优，才可普之。是我的想法错了。作为一个喜欢软件开发的人，不应该去抗拒其相关技术，应该多去了解。</p><p>祝好。</p>]]></content>
      
      
      <categories>
          
          <category> 静心之处 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/28/hello-world/"/>
      <url>/2020/02/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
